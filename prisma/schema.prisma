// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                          Int               @id @default(autoincrement())
  lisClientCode               String            @db.VarChar(16) @unique
  prefix                      String            @db.VarChar(16) @unique
  dateActivated               DateTime          @db.Date
  dateDeactivated             DateTime?         @db.Date
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt @default(now())
  patients                    Patient[]
  providers                   Provider[]
}
model Address {
  id                          Int               @id @default(autoincrement())
  address1                    String            @db.VarChar(128)
  address2                    String?           @db.VarChar(128)
  city                        String            @db.VarChar(64)
  state                       String            @db.VarChar(128)
  zip                         String            @db.VarChar(32)
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt @default(now())
  patient                     Patient[]
  insuranceCompany            InsuranceCompany[]
}
model Analyte {
  id                          Int               @id @default(autoincrement())
  name                        String            @unique @db.VarChar(32)
  drugClassId                 Int?
  drugClass                   DrugClass?        @relation(fields: [drugClassId], references: [id])
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt @default(now())
  medications                 Medication[]
  testCodes                   TestCode[]
}
model DiagnosisCode {
  id                          Int               @id @default(autoincrement())
  diagnosisCode               String            @db.VarChar(32) @unique
  description                 String            @db.VarChar(2048)
  patients                    Patient[]
}
model DrugClass {
  id                          Int               @id @default(autoincrement())
  name                        String            @unique @db.VarChar(32)
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt @default(now())
  analytes                    Analyte[]
}
model InsuranceCompany {
  id                          Int               @id @default(autoincrement())
  lisInsuranceCode            String            @db.VarChar(32) @unique
  companyName                 String            @db.VarChar(128)
  lisNote                     String?           @db.VarChar(2048)
  addressId                   Int
  address                     Address           @relation(fields: [addressId], references: [id])
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt @default(now())
  patientPrimary              Patient[]         @relation("primaryInsurance")
  patientSecondary            Patient[]         @relation("secondaryInsurance")
  rules                       Rule[]
}
model Medication {
  id                          Int               @id @default(autoincrement())
  lisMedCode                  String            @db.VarChar(32) @unique
  description                 String            @db.VarChar(2048)
  testable                    Boolean           @default(false)
  active                      Boolean
  analyteId                   Int?
  analyte                     Analyte?          @relation(fields: [analyteId], references: [id])
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt @default(now())
  patient                     Patient[]
}
model Order {
  id                          Int               @id @default(autoincrement())
  requisitionNumber           String            @db.VarChar(32) @unique

  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt @default(now())
}
model Patient {
  id                          Int               @id @default(autoincrement())
  firstName                   String            @db.VarChar(128)
  lastName                    String            @db.VarChar(128)
  middleName                  String?           @db.VarChar(128)
  dateOfBirth                 DateTime          @db.Date
  lisPatientCode              String            @db.VarChar(16)
  sex                         String            @db.VarChar(1)
  primaryInsuranceId          Int
  primaryInsurance            InsuranceCompany  @relation("primaryInsurance", fields: [primaryInsuranceId], references: [id])
  primaryInsuranceNumber      String            @db.VarChar(32)
  primaryInsuranceRelation    String            @db.VarChar(32)
  secondaryInsuranceId        Int?
  secondaryInsurance          InsuranceCompany? @relation("secondaryInsurance", fields: [secondaryInsuranceId], references: [id])
  secondaryInsuranceNumber    String?           @db.VarChar(32)
  secondaryInsuranceRelation  String?           @db.VarChar(32)
  addressId                   Int
  address                     Address           @relation(fields: [addressId], references: [id])
  accountId                   Int
  account                     Account           @relation(fields: [accountId], references: [id])
  medications                 Medication[]
  diagnoses                   DiagnosisCode[]
}
model Provider {
  id                          Int               @id @default(autoincrement())
  npi                         String            @db.VarChar(32) @unique
  fullName                    String            @db.VarChar(512)
  firstName                   String            @db.VarChar(128)
  lastName                    String            @db.VarChar(128)
  title                       String            @db.VarChar(128)
  signatureBlob               Bytes             @db.Blob
  signatureFilename           String            @db.VarChar(16)
  accountId                   Int
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt @default(now())
  account                     Account           @relation(fields: [accountId], references: [id])
}
model Rule {
  id                          Int               @id @default(autoincrement())
  name                        String            @db.VarChar(128)
  description                 String            @db.VarChar(2048)
  internalComment             String?           @db.VarChar(2048)
  externalComment             String?           @db.VarChar(2048)
  startDate                   DateTime?         @db.Date
  endDate                     DateTime?         @db.Date
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt @default(now())
  insuranceCompany            InsuranceCompany[]
}
model TestCode {
  id                          Int               @id @default(autoincrement())
  name                        String?           @db.VarChar(128)
  description                 String?           @db.VarChar(2048)
  testCode                    String            @db.VarChar(64) @unique
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt @default(now())
  sampleType                  String            @db.VarChar(32) @default("UT")
  method                      String            @db.VarChar(32) @default("Confirmation")
  eiaDetected                 Boolean?          @default(true)
  analytes                    Analyte[]
  parentCodes                 TestCode[]        @relation("TestCodeToTestCode")
  childCodes                  TestCode[]        @relation("TestCodeToTestCode")
}